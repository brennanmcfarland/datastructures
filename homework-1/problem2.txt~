a. if a number is the majority element, then the instances of that number have to consecutively repeat evenly by nature of being the majority number.  Thus, the algorithm starts by picking out numbers that consecutively repeat as such and forms array B of every instance of repetition, giving the majority candidates, and so on.

b. the recursion terminates when either there is no element in the array, in which case there is no majority element, or there is only one element in the array, which would be the majority element.

c. where N is odd, the algorithm breaks, indicating there is no majority element, as with the first example.

d. the problem is recursively divided up into smaller problems, so O(logN)

e. we can avoid using an extra array B by 
